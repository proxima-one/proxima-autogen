user(id: "${userID}") {
  totalMPHEarned
  totalMPHPaidBack
  pools {
    id
    address
    mphDepositorRewardTakeBackMultiplier
    deposits(where: { user: "${userID}", active: true }, orderBy: nftID) {
      nftID
      fundingID
      amount
      maturationTimestamp
      depositTimestamp
      interestEarned
      mintMPHAmount
      takeBackMPHAmount
    }
  }
  totalDepositByPool {
    pool {
      address
      stablecoin
    }
    totalActiveDeposit
    totalInterestEarned
  }
}

dpools {
  id
  address
  totalActiveDeposit
  oneYearInterestRate
  mphDepositorRewardMintMultiplier
  mphDepositorRewardTakeBackMultiplier
}

funder(id: "${funderID}") {
  totalMPHEarned
  pools {
    id
    address
    fundings(where: { funder: "${funderID}", active: true }, orderBy: nftID) {
      id
      pool {
        address
        oracleInterestRate
        moneyMarketIncomeIndex
      }
      fromDepositID
      toDepositID
      nftID
      recordedFundedDepositAmount
      recordedMoneyMarketIncomeIndex
      initialFundedDepositAmount
      fundedDeficitAmount
      totalInterestEarned
      mphRewardEarned
      refundAmount
    }
  }
  totalInterestByPool {
    pool {
      id
      stablecoin
    }
    totalDeficitFunded
    totalRecordedFundedDepositAmount
    totalInterestEarned
  }
}

dpools {
  id
  address
  surplus
  unfundedDepositAmount
  oneYearInterestRate
  oracleInterestRate
  mphFunderRewardMultiplier
  latestDeposit: deposits(orderBy: nftID, orderDirection: desc, first: 1) {
    nftID
  }
}

dpool(id: "${poolID}") {
  id
  moneyMarketIncomeIndex
  deposits(where: { nftID_gt: ${this.selectedPool.latestFundedDeposit} }, orderBy: nftID) {
    nftID
    amount
    active
    maturationTimestamp
    interestEarned
    initialMoneyMarketIncomeIndex
  }
}
