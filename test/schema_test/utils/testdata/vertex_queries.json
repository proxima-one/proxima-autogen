{"DPoolLists":{"get":"query { DPoolList(id: $id, prove: $prove) {id}}\n","getAll":"query { DPoolLists(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {DPoolListSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateDPoolList(input: $input)}\n"},"DPools":{"get":"query { DPool(id: $id, prove: $prove) {id}}\n","getAll":"query { DPools(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {DPoolSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateDPool(input: $input)}\n"},"Users":{"get":"query { User(id: $id, prove: $prove) {id}}\n","getAll":"query { Users(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {UserSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateUser(input: $input)}\n"},"UserTotalDeposits":{"get":"query { UserTotalDeposit(id: $id, prove: $prove) {id}}\n","getAll":"query { UserTotalDeposits(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {UserTotalDepositSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateUserTotalDeposit(input: $input)}\n"},"Deposits":{"get":"query { Deposit(id: $id, prove: $prove) {id}}\n","getAll":"query { Deposits(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {DepositSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateDeposit(input: $input)}\n"},"Funders":{"get":"query { Funder(id: $id, prove: $prove) {id}}\n","getAll":"query { Funders(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {FunderSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateFunder(input: $input)}\n"},"FunderTotalInterests":{"get":"query { FunderTotalInterest(id: $id, prove: $prove) {id}}\n","getAll":"query { FunderTotalInterests(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {FunderTotalInterestSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateFunderTotalInterest(input: $input)}\n"},"Fundings":{"get":"query { Funding(id: $id, prove: $prove) {id}}\n","getAll":"query { Fundings(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {FundingSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateFunding(input: $input)}\n"},"MPHHolders":{"get":"query { MPHHolder(id: $id, prove: $prove) {id}}\n","getAll":"query { MPHHolders(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {MPHHolderSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateMPHHolder(input: $input)}\n"},"MPHs":{"get":"query { MPH(id: $id, prove: $prove) {id}}\n","getAll":"query { MPHs(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {MPHSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateMPH(input: $input)}\n"},"Vests":{"get":"query { Vest(id: $id, prove: $prove) {id}}\n","getAll":"query { Vests(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {VestSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateVest(input: $input)}\n"},"FractionalDeposits":{"get":"query { FractionalDeposit(id: $id, prove: $prove) {id}}\n","getAll":"query { FractionalDeposits(where: $whereText, order_by: $order_by, asc: $asc, first: $first, last: $last, limit: $limit, prove: $prove) {id}}","search":"query {FractionalDepositSearch(queryText: $queryText, prove: $prove) {id  }}","put":"mutation {updateFractionalDeposit(input: $input)}\n"}}