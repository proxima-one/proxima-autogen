
scalar BigDecimal
scalar BigInt
type Query {
ConversionRate(id: ID!, prove: Boolean): ConversionRate!
ConversionRates(where: String, order_by: String, asc: Int, first: Int, last: Int, limit: Int, prove: Boolean): [ConversionRate]!
ConversionRateSearch(queryText: String!, prove: Boolean): [ConversionRate]!
Proof(id: ID!, prove: Boolean): Proof!
Proofs(where: String, order_by: String, asc: Int, first: Int, last: Int, limit: Int, prove: Boolean): [Proof]!
ProofSearch(queryText: String!, prove: Boolean): [Proof]!

}

type Mutation {
updateConversionRate(input: ConversionRateInput!): Boolean 
updateProof(input: ProofInput!): Boolean 

}

type ConversionRate {
token: String
rateSell: Float
rateBuy: Float
spread: Float
spreadPercent: [Float]
proof: Proof  @goField(forceResolver: true)
} 

input ConversionRateInput {
token: String
rateSell: Float
rateBuy: Float
spread: Float
spreadPercent: [Float]
ProofID: String
}

type Proof {
  root: String
  proof: String
}

directive @hasAuthentication on MUTATION | SUBSCRIPTION | QUERY
directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
